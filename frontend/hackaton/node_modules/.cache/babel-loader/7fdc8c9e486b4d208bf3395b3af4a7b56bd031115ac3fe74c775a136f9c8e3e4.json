{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D_24\\\\Documents\\\\GitHub\\\\EnchantedHunt\\\\frontend\\\\hackaton\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Утилиты для безопасной работы с localStorage\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst safeLocalStorage = {\n  getItem: key => {\n    try {\n      if (typeof window === 'undefined') return null;\n      const item = localStorage.getItem(key);\n      return item === 'undefined' || item === 'null' || item === null ? null : item;\n    } catch (error) {\n      console.warn(`Error reading ${key} from localStorage:`, error);\n      return null;\n    }\n  },\n  setItem: (key, value) => {\n    try {\n      if (typeof window === 'undefined') return;\n      localStorage.setItem(key, value);\n    } catch (error) {\n      console.warn(`Error setting ${key} in localStorage:`, error);\n    }\n  },\n  removeItem: key => {\n    try {\n      if (typeof window === 'undefined') return;\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.warn(`Error removing ${key} from localStorage:`, error);\n    }\n  },\n  getJSON: key => {\n    try {\n      const item = this.getItem(key);\n      if (!item) return null;\n      const parsed = JSON.parse(item);\n      return parsed;\n    } catch (error) {\n      console.warn(`Error parsing ${key} from localStorage:`, error);\n      this.removeItem(key); // Удаляем поврежденные данные\n      return null;\n    }\n  },\n  setJSON: (key, value) => {\n    try {\n      if (typeof window === 'undefined') return;\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.warn(`Error stringifying ${key} for localStorage:`, error);\n    }\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = () => {\n      try {\n        const token = safeLocalStorage.getItem('accessToken');\n        const userData = safeLocalStorage.getJSON('user');\n        console.log('Initializing auth - token:', !!token, 'userData:', userData);\n        if (token && userData && typeof userData === 'object') {\n          setCurrentUser({\n            ...userData,\n            token\n          });\n        } else {\n          // Очищаем невалидные данные\n          if (token && !userData) {\n            safeLocalStorage.removeItem('accessToken');\n            safeLocalStorage.removeItem('refreshToken');\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n        // Полная очистка при любой ошибке\n        safeLocalStorage.removeItem('accessToken');\n        safeLocalStorage.removeItem('refreshToken');\n        safeLocalStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authService.signIn({\n        email: email,\n        password: password\n      });\n      const {\n        accessToken,\n        refreshToken,\n        user\n      } = response;\n\n      // Сохраняем токены\n      safeLocalStorage.setItem('accessToken', accessToken);\n      safeLocalStorage.setItem('refreshToken', refreshToken);\n\n      // Сохраняем данные пользователя только если они валидны\n      if (user && typeof user === 'object') {\n        safeLocalStorage.setJSON('user', user);\n        setCurrentUser({\n          ...user,\n          token: accessToken\n        });\n      } else {\n        throw new Error('Invalid user data received from server');\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      let errorMessage = 'Failed to login';\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        errorMessage = 'Invalid email or password';\n      } else if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const register = async (email, password, name) => {\n    try {\n      const response = await authService.signUp({\n        email: email,\n        password: password,\n        name: name\n      });\n      const {\n        accessToken,\n        refreshToken,\n        user\n      } = response;\n      safeLocalStorage.setItem('accessToken', accessToken);\n      safeLocalStorage.setItem('refreshToken', refreshToken);\n      if (user && typeof user === 'object') {\n        safeLocalStorage.setJSON('user', user);\n        setCurrentUser({\n          ...user,\n          token: accessToken\n        });\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response5, _error$response5$data;\n      let errorMessage = 'Failed to create account';\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 409) {\n        errorMessage = 'User with this email already exists';\n      } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 400) {\n        var _error$response$data;\n        errorMessage = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Invalid registration data';\n      } else if ((_error$response5 = error.response) !== null && _error$response5 !== void 0 && (_error$response5$data = _error$response5.data) !== null && _error$response5$data !== void 0 && _error$response5$data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      safeLocalStorage.removeItem('accessToken');\n      safeLocalStorage.removeItem('refreshToken');\n      safeLocalStorage.removeItem('user');\n      setCurrentUser(null);\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","safeLocalStorage","getItem","key","window","item","localStorage","error","console","warn","setItem","value","removeItem","getJSON","parsed","JSON","parse","setJSON","stringify","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","initializeAuth","token","userData","log","login","email","password","response","signIn","accessToken","refreshToken","user","Error","success","_error$response","_error$response2","_error$response2$data","errorMessage","status","data","message","register","name","signUp","_error$response3","_error$response4","_error$response5","_error$response5$data","_error$response$data","logout","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/D_24/Documents/GitHub/EnchantedHunt/frontend/hackaton/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authService } from '../services/authService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\n// Утилиты для безопасной работы с localStorage\r\nconst safeLocalStorage = {\r\n  getItem: (key) => {\r\n    try {\r\n      if (typeof window === 'undefined') return null;\r\n      const item = localStorage.getItem(key);\r\n      return item === 'undefined' || item === 'null' || item === null ? null : item;\r\n    } catch (error) {\r\n      console.warn(`Error reading ${key} from localStorage:`, error);\r\n      return null;\r\n    }\r\n  },\r\n\r\n  setItem: (key, value) => {\r\n    try {\r\n      if (typeof window === 'undefined') return;\r\n      localStorage.setItem(key, value);\r\n    } catch (error) {\r\n      console.warn(`Error setting ${key} in localStorage:`, error);\r\n    }\r\n  },\r\n\r\n  removeItem: (key) => {\r\n    try {\r\n      if (typeof window === 'undefined') return;\r\n      localStorage.removeItem(key);\r\n    } catch (error) {\r\n      console.warn(`Error removing ${key} from localStorage:`, error);\r\n    }\r\n  },\r\n\r\n  getJSON: (key) => {\r\n    try {\r\n      const item = this.getItem(key);\r\n      if (!item) return null;\r\n      \r\n      const parsed = JSON.parse(item);\r\n      return parsed;\r\n    } catch (error) {\r\n      console.warn(`Error parsing ${key} from localStorage:`, error);\r\n      this.removeItem(key); // Удаляем поврежденные данные\r\n      return null;\r\n    }\r\n  },\r\n\r\n  setJSON: (key, value) => {\r\n    try {\r\n      if (typeof window === 'undefined') return;\r\n      localStorage.setItem(key, JSON.stringify(value));\r\n    } catch (error) {\r\n      console.warn(`Error stringifying ${key} for localStorage:`, error);\r\n    }\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = () => {\r\n      try {\r\n        const token = safeLocalStorage.getItem('accessToken');\r\n        const userData = safeLocalStorage.getJSON('user');\r\n        \r\n        console.log('Initializing auth - token:', !!token, 'userData:', userData);\r\n        \r\n        if (token && userData && typeof userData === 'object') {\r\n          setCurrentUser({ ...userData, token });\r\n        } else {\r\n          // Очищаем невалидные данные\r\n          if (token && !userData) {\r\n            safeLocalStorage.removeItem('accessToken');\r\n            safeLocalStorage.removeItem('refreshToken');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing auth:', error);\r\n        // Полная очистка при любой ошибке\r\n        safeLocalStorage.removeItem('accessToken');\r\n        safeLocalStorage.removeItem('refreshToken');\r\n        safeLocalStorage.removeItem('user');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await authService.signIn({\r\n        email: email,\r\n        password: password\r\n      });\r\n\r\n      const { accessToken, refreshToken, user } = response;\r\n      \r\n      // Сохраняем токены\r\n      safeLocalStorage.setItem('accessToken', accessToken);\r\n      safeLocalStorage.setItem('refreshToken', refreshToken);\r\n      \r\n      // Сохраняем данные пользователя только если они валидны\r\n      if (user && typeof user === 'object') {\r\n        safeLocalStorage.setJSON('user', user);\r\n        setCurrentUser({ ...user, token: accessToken });\r\n      } else {\r\n        throw new Error('Invalid user data received from server');\r\n      }\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      let errorMessage = 'Failed to login';\r\n      \r\n      if (error.response?.status === 401) {\r\n        errorMessage = 'Invalid email or password';\r\n      } else if (error.response?.data?.message) {\r\n        errorMessage = error.response.data.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      \r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const register = async (email, password, name) => {\r\n    try {\r\n      const response = await authService.signUp({\r\n        email: email,\r\n        password: password,\r\n        name: name\r\n      });\r\n\r\n      const { accessToken, refreshToken, user } = response;\r\n      \r\n      safeLocalStorage.setItem('accessToken', accessToken);\r\n      safeLocalStorage.setItem('refreshToken', refreshToken);\r\n      \r\n      if (user && typeof user === 'object') {\r\n        safeLocalStorage.setJSON('user', user);\r\n        setCurrentUser({ ...user, token: accessToken });\r\n      }\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      let errorMessage = 'Failed to create account';\r\n      \r\n      if (error.response?.status === 409) {\r\n        errorMessage = 'User with this email already exists';\r\n      } else if (error.response?.status === 400) {\r\n        errorMessage = error.response.data?.message || 'Invalid registration data';\r\n      } else if (error.response?.data?.message) {\r\n        errorMessage = error.response.data.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      \r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authService.logout();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      safeLocalStorage.removeItem('accessToken');\r\n      safeLocalStorage.removeItem('refreshToken');\r\n      safeLocalStorage.removeItem('user');\r\n      setCurrentUser(null);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}