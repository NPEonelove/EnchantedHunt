{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/v1/auth';\n\n// Создаем экземпляр axios с настройками CORS\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // для отправки cookies\n});\n\n// Добавляем обработчик для preflight requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // Добавляем CORS headers если нужно\n  config.headers['Access-Control-Allow-Origin'] = 'http://localhost:3000';\n  config.headers['Access-Control-Allow-Methods'] = 'GET, POST, PUT, DELETE, OPTIONS';\n  config.headers['Access-Control-Allow-Headers'] = '*';\n  config.headers['Access-Control-Allow-Credentials'] = 'true';\n  return config;\n});\n\n// Остальной код без изменений","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization"],"sources":["C:/Users/D_24/Documents/GitHub/EnchantedHunt/frontend/hackaton/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api/v1/auth';\r\n\r\n// Создаем экземпляр axios с настройками CORS\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, // для отправки cookies\r\n});\r\n\r\n// Добавляем обработчик для preflight requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('accessToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  \r\n  // Добавляем CORS headers если нужно\r\n  config.headers['Access-Control-Allow-Origin'] = 'http://localhost:3000';\r\n  config.headers['Access-Control-Allow-Methods'] = 'GET, POST, PUT, DELETE, OPTIONS';\r\n  config.headers['Access-Control-Allow-Headers'] = '*';\r\n  config.headers['Access-Control-Allow-Credentials'] = 'true';\r\n  \r\n  return config;\r\n});\r\n\r\n// Остальной код без изменений"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,mCAAmC;;AAEnD;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE,IAAI,CAAE;AACzB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;;EAEA;EACAD,MAAM,CAACL,OAAO,CAAC,6BAA6B,CAAC,GAAG,uBAAuB;EACvEK,MAAM,CAACL,OAAO,CAAC,8BAA8B,CAAC,GAAG,iCAAiC;EAClFK,MAAM,CAACL,OAAO,CAAC,8BAA8B,CAAC,GAAG,GAAG;EACpDK,MAAM,CAACL,OAAO,CAAC,kCAAkC,CAAC,GAAG,MAAM;EAE3D,OAAOK,MAAM;AACf,CAAC,CAAC;;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}